<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.PT.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.PT.entity.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="driver_id" jdbcType="INTEGER" property="driverId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="ordered_at" jdbcType="TIMESTAMP" property="orderedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, status, order_id, project_id, store_id, driver_id, created_at, ordered_at
  </sql>
  <select id="selectByExample" parameterType="com.PT.entity.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ykat_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ykat_orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ykat_orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.PT.entity.OrderExample">
    delete from ykat_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.PT.entity.Order">
    insert into ykat_orders (id, type, status, 
      order_id, project_id, store_id, 
      driver_id, created_at, ordered_at
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{orderId,jdbcType=VARCHAR}, #{projectId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{driverId,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{orderedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.PT.entity.Order">
    insert into ykat_orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="driverId != null">
        driver_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="orderedAt != null">
        ordered_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="driverId != null">
        #{driverId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="orderedAt != null">
        #{orderedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.PT.entity.OrderExample" resultType="java.lang.Integer">
    select count(*) from ykat_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ykat_orders
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.driverId != null">
        driver_id = #{record.driverId,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderedAt != null">
        ordered_at = #{record.orderedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ykat_orders
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=INTEGER},
      store_id = #{record.storeId,jdbcType=INTEGER},
      driver_id = #{record.driverId,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      ordered_at = #{record.orderedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.PT.entity.Order">
    update ykat_orders
    <set>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="driverId != null">
        driver_id = #{driverId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="orderedAt != null">
        ordered_at = #{orderedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.PT.entity.Order">
    update ykat_orders
    set type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER},
      driver_id = #{driverId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      ordered_at = #{orderedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.PT.entity.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="driver_id" jdbcType="INTEGER" property="driverId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="ordered_at" jdbcType="TIMESTAMP" property="orderedAt" />
  </resultMap>
  <resultMap id="OrderInfoMapper" type="map">
    <result column="order_id" property="orderId" />
    <result column="driver_name" property="driverName" />
    <result column="project_descp" property="projectDescp" />
    <result column="project_type" property="projectType" />
    <result column="state" property="state" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <resultMap id="OrderInfoMap" type="map">
    <result column="id" property="id" />
    <result column="project_price" property="price" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, status, order_id, project_id, store_id, driver_id, created_at, ordered_at
  </sql>
  <select id="selectByExample" parameterType="com.PT.entity.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ykat_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectOrderInfoByFactor" parameterType="map" resultMap="OrderInfoMapper">
    select
    oder.order_id order_id, oder.status state, oder.created_at,
    driver.driver_name driver_name,
    project.descp project_descp, project.type project_type
    from ykat_orders oder inner join ykat_drivers driver on oder.driver_id=driver.id
    inner join ykat_projects project on project.id=oder.project_id
    where oder.store_id = #{map.storeId,jdbcType=INTEGER}
    and oder.type = #{map.orderType,jdbcType=VARCHAR}
    <if test="map.state != null and map.state != '' ">
      and oder.status = #{map.state,jdbcType=VARCHAR}
    </if>
    <if test="map.fromDate != null">
      and oder.created_at &gt;= #{map.fromDate,jdbcType=TIMESTAMP}
    </if>
    <if test="map.fromDate != null and map.toDate != null ">
      and oder.created_at BETWEEN #{map.fromDate,jdbcType=TIMESTAMP} and #{map.toDate,jdbcType=TIMESTAMP}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ykat_orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectOrderFromViewByOrderID" parameterType="java.lang.String" resultMap="OrderInfoMap">
    select id, project_price
    from order_info_v
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ykat_orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.PT.entity.OrderExample">
    delete from ykat_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.PT.entity.Order">
    insert into ykat_orders (id, type, status, 
      order_id, project_id, store_id, 
      driver_id, created_at, ordered_at
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{orderId,jdbcType=VARCHAR}, #{projectId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{driverId,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{orderedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <select id="getGeneratedOrderId" parameterType="map" resultType="map" statementType="CALLABLE">
    {
         call genBillsNoPROC(
               #{tableName,mode=IN,jdbcType=VARCHAR},
               #{colName,mode=IN,jdbcType=VARCHAR},
               #{billsNoResult,mode=OUT,jdbcType=VARCHAR}
         )
    }
  </select>
  <insert id="insertSelective" parameterType="com.PT.entity.Order">
    insert into ykat_orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="driverId != null">
        driver_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="orderedAt != null">
        ordered_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="driverId != null">
        #{driverId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="orderedAt != null">
        #{orderedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.PT.entity.OrderExample" resultType="java.lang.Integer">
    select count(*) from ykat_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="countOrderInfoByFactor" parameterType="map" resultType="java.lang.Integer">
    select
    count(*)
    from ykat_orders oder inner join ykat_drivers driver on oder.driver_id=driver.id
    inner join ykat_projects project on project.id=oder.project_id
    where oder.store_id = #{map.storeId,jdbcType=INTEGER}
    and oder.type = #{map.orderType,jdbcType=VARCHAR}
    <if test="map.state != null and map.state != '' ">
      and oder.status = #{map.state,jdbcType=VARCHAR}
    </if>
    <if test="map.fromDate != null and map.toDate != null ">
      and oder.created_at BETWEEN #{map.fromDate,jdbcType=TIMESTAMP} and #{map.toDate,jdbcType=TIMESTAMP}
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ykat_orders
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.driverId != null">
        driver_id = #{record.driverId,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderedAt != null">
        ordered_at = #{record.orderedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ykat_orders
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=INTEGER},
      store_id = #{record.storeId,jdbcType=INTEGER},
      driver_id = #{record.driverId,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      ordered_at = #{record.orderedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.PT.entity.Order">
    update ykat_orders
    <set>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="driverId != null">
        driver_id = #{driverId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="orderedAt != null">
        ordered_at = #{orderedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.PT.entity.Order">
    update ykat_orders
    set type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER},
      driver_id = #{driverId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      ordered_at = #{orderedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>