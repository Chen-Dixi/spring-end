<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.PT.dao.ReceiveMoneyRecordMapper" >
  <resultMap id="BaseResultMap" type="com.PT.entity.ReceiveMoneyRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="trade_money" property="tradeMoney" jdbcType="INTEGER" />
    <result column="trade_time" property="tradeTime" jdbcType="TIMESTAMP" />
    <result column="driver_id" property="driverId" jdbcType="INTEGER" />
    <result column="boss_id" property="bossId" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, trade_money, trade_time, driver_id, boss_id, created_at
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.PT.entity.ReceiveMoneyRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from receive_money_records
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from receive_money_records
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from receive_money_records
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.PT.entity.ReceiveMoneyRecordExample" >
    delete from receive_money_records
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.PT.entity.ReceiveMoneyRecord" >
    insert into receive_money_records (id, trade_money, trade_time, 
      driver_id, boss_id, created_at
      )
    values (#{id,jdbcType=INTEGER}, #{tradeMoney,jdbcType=INTEGER}, #{tradeTime,jdbcType=TIMESTAMP}, 
      #{driverId,jdbcType=INTEGER}, #{bossId,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.PT.entity.ReceiveMoneyRecord" >
    insert into receive_money_records
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="tradeMoney != null" >
        trade_money,
      </if>
      <if test="tradeTime != null" >
        trade_time,
      </if>
      <if test="driverId != null" >
        driver_id,
      </if>
      <if test="bossId != null" >
        boss_id,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tradeMoney != null" >
        #{tradeMoney,jdbcType=INTEGER},
      </if>
      <if test="tradeTime != null" >
        #{tradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="driverId != null" >
        #{driverId,jdbcType=INTEGER},
      </if>
      <if test="bossId != null" >
        #{bossId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.PT.entity.ReceiveMoneyRecordExample" resultType="java.lang.Integer" >
    select count(*) from receive_money_records
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update receive_money_records
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tradeMoney != null" >
        trade_money = #{record.tradeMoney,jdbcType=INTEGER},
      </if>
      <if test="record.tradeTime != null" >
        trade_time = #{record.tradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.driverId != null" >
        driver_id = #{record.driverId,jdbcType=INTEGER},
      </if>
      <if test="record.bossId != null" >
        boss_id = #{record.bossId,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update receive_money_records
    set id = #{record.id,jdbcType=INTEGER},
      trade_money = #{record.tradeMoney,jdbcType=INTEGER},
      trade_time = #{record.tradeTime,jdbcType=TIMESTAMP},
      driver_id = #{record.driverId,jdbcType=INTEGER},
      boss_id = #{record.bossId,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.PT.entity.ReceiveMoneyRecord" >
    update receive_money_records
    <set >
      <if test="tradeMoney != null" >
        trade_money = #{tradeMoney,jdbcType=INTEGER},
      </if>
      <if test="tradeTime != null" >
        trade_time = #{tradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="driverId != null" >
        driver_id = #{driverId,jdbcType=INTEGER},
      </if>
      <if test="bossId != null" >
        boss_id = #{bossId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.PT.entity.ReceiveMoneyRecord" >
    update receive_money_records
    set trade_money = #{tradeMoney,jdbcType=INTEGER},
      trade_time = #{tradeTime,jdbcType=TIMESTAMP},
      driver_id = #{driverId,jdbcType=INTEGER},
      boss_id = #{bossId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>